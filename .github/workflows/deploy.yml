name: Deploy to Github Pages

permissions:
  contents: read
  pages: write
  id-token: write

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Nodejs
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Install Dependencies
      - name: Install Dependencies
        run: npm install

      # Build the project
      - name: Build project
        run: npm run build
        
      
      - name: üîç Change Vesions
        run: |
          BRANCH_NAME=${GITHUB_REF##*/}
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          node scripts/bump-version.js

      - name: üíæ Commit Version
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          if git diff --quiet package.json; then
            echo "No version changes. Nothing to commit."
          else
            git add package.json
            git commit -m "chore: bump version after release merge [ci skip]"
            git push
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      # Build the project
      - name: Build project to extension
        run: npm run build-extension

      - name: üìÅ Compact build folder
        run: |
          zip -r build.zip build

      - name: Upload & release Extension
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          file-path: build.zip
          extension-id: hogefuga(extension id)
          client-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          refresh-token: ${{ secrets.REFRESH_TOKEN }}

      - name: üè∑Ô∏è Create tag
        if: github.ref == 'refs/heads/main' && success()
        run: |
          VERSION=$(node -p "require('./package.json').version")
          TAG="v$VERSION"
          echo "Creating tag $TAG"

          git tag $TAG
          git push origin $TAG